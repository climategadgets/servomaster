<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://apache.org/forrest/dtd/document-v12.dtd">
<document>
    <header>
        <title>ServoMaster: Observations on Parallax Servo Controllers</title>
    </header>
    <body>
        
        <section>
            <title>Summary</title>
            
            <p>
            
                There are two controllers: <link
                href="ext:parallax_psc">serial</link> and <link
                href="ext:parallax_usb">USB</link>. Like <link
                href="site:pololu">Pololu</link>, Parallax USB controller is
                basically a Parallax serial with Serial/USB bridge on top of
                it. Unlike Pololu, Parallax USB uses a well supported <link
                href="ext:ftdichip">FTDI</link> FT232BM chip, well supported
                by Linux community.
                
            </p>
            <p>
            
                Both of them share the same protocol, so the driver doesn't
                have to be changed.
                
            </p>
            
            <table>
                <caption>Supported Features</caption>
                <tr>
                    <td>

                        Individual Servo <link
                        href="site:meta_servo_range_min">min</link>/<link
                        href="site:meta_servo_range_max">max</link> preset

                    </td>
                </tr>
                <tr>
                    <td>
                        
                        Hardware controlled constant <link
                        href="site:meta_servo_velocity">velocity</link>
                        transition, per servo
                        
                    </td>
                </tr>
            </table>
            
        </section>
        <section>
            <title>Common Features</title>
            <section>
            
                <title>Good Things</title>
            
                <ul>
                
                    <li>
                    
                        Status feedback - this is the only controller that
                        supports it (to the best of my knowledge);
                        
                    </li>
                    <li>
                    
                        Moreover, real time status feedback for hardware
                        supported transition - if you command the servo to
                        start the transition, and then keep reading its
                        position, the controller will report the real time
                        position information back to you - this is really
                        cool;
                        
                    </li>
                    <li>
                    
                        Precise. The position unit is 2&#181;s, which should
                        be enough for most applications;
                        
                    </li>
                    <li>
                    
                        Fast. The baud rate may go as high as 38.4K.
                        
                    </li>
                    <li>
                    
                        Stackable. You can connect two controllers to
                        control up to 32 servos.
                        
                    </li>
                
                </ul>
                
            </section>
            <section>
            
                <title>Bad Things</title>
                
                <ul>
                
                    <li>
                    
                        <p>
                        
                            You have to be careful with the baud rate
                            - selection once the controller is configured to
                            work at 38.4KBaud, there's no going back until
                            after hardware reset. This may require jumping
                            through extra hoops to ensure the
                            mission-critical application is able to properly
                            reinitialize the controller driver on a
                            subsequent startup without someone actually
                            pressing the reset button on the controller -
                            that would be pretty inconvenient.
                        
                        </p>
                        
                    </li>
                    
                    <li>
                    
                    	<warning>Careful with your servos</warning>
                    
                    	<p>
                    	
                    		Controller has a strong timing bias towards the high end. Timing range is 500μs to 2500μs,
                    		which makes the servos that I have (admittedly, there are no two identical ones) undershoot
                    		a good 30&deg; turning clockwise, and overshoots turning counterclockwise.
                    		
                   		</p>
                   		<p>                    		
                    		One Parallax servo went growling at
                    		1878μs, and Futabas I have have done the same at 2315μs, 2185μs, 2352μs, 2222μs, 2260μs, 2212μs, 2132μs, 2335μs, 1190μs, 2337μs
                    		(92.6%, 87.4%, 94.1%, 88.8%, 90.4%, 88.4%, 85.3%, 93.4%, 79.6%, 95.1%, respectively). None of the servos
                    		growled at the low end.
                    	</p>
                    
                    </li>
                    
                    <li>
                    
                    	<p>
                    	
                    		As expected, USB disconnect is not possible to handle gracefully. If the process is still holding the
                    		handle, the reconnected USB device allocates the next available serial port name. It is, I guess, possible
                    		to pig the port once in a short while and fail once the port is gone, but reliable reconnect in case when
                    		more than one USB to serial adapter is present is out of question - unless there's a way to lock a device
                    		to a port, which I a) doubt b) have to read up on.
                    	</p>
                    </li>
                    
                </ul>
                
            </section>
        </section>
        <section>
            <title>More Good Things To Come</title>
            
            <p>
            
                I thought that the Parallax driver was more or less finished, turns out, far from that.
                The current plan is to implement advanced controller features during next several days -
                keep watching the <link href="site:downloads">downloads area</link> and the
                <link href="ext:dz_blog_servomaster">news channel</link>.
                
            </p>
            
        </section>
        <section>
            <title>To be continued</title>
            
            <p>
            
                More to come after the device actually gets tested - which is, hopefully,
                <link href="http://diy-zoning.blogspot.com/search/label/DZ3">pretty soon</link>.
                
            </p>
            
        </section>

    </body>

</document>
