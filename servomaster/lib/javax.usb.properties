#
# Properties file for javax.usb
#
# This file is provided by the Linux implementation of javax.usb.
#
# The 2.4 kernel does not support control-type queueing nor interrupt-type
# queueing (see below to enable javax.usb internal queueing).
#
# Some 2.4 kernels do not properly handle hotplug notification, specifically
# those somewhere after 2.4.19.  See below to enable polling instead.
#

################################################################################
# Properties required/used by javax.usb API
################################################################################

# This is required by the API, this is the class that the API will create
# to implement UsbServices.
javax.usb.services = com.ibm.jusb.os.linux.LinuxUsbServices

################################################################################
# Properties required/used by javax.usb Common Reference Implementation
################################################################################

# These properties enable queueing for different pipe types.  If the operating
# system does not support queueing for a particular pipe type (or at all),
# enable queueing here.  This queueing is most likely much slower than OS-level
# queueing, so if the OS supports queueing, these should not be enabled.
#com.ibm.jusb.UsbPipeImp.queueSubmissions.control = false
#com.ibm.jusb.UsbPipeImp.queueSubmissions.interrupt = false
#com.ibm.jusb.UsbPipeImp.queueSubmissions.isochronous = false
#com.ibm.jusb.UsbPipeImp.queueSubmissions.bulk = false

# This property is similar to the UsbPipe-specific queueing properties, but
# this applies only to the Default Control Pipe queueing.
#com.ibm.jusb.UsbDeviceImp.queueSubmissions = false

################################################################################
# Properties required/used by javax.usb Linux Implementation
################################################################################

# If polling should be used instead of waiting for a hotplug notification.
# Some kernel versions have a bug, and don't update the device node(s) until
# many seconds after waking up threads waiting on the devices file.
# If you are not getting hotplug events on a moderately to heavily loaded system,
# use polling.
# Note that since the new (buggy?) kernel behavior breaks javax.usb, this defaults to true!
# If you know your kernel isn't broken you can set this to false.
#com.ibm.jusb.os.linux.LinuxUsbServices.topologyUpdateUsePolling = true

# If polling is disabled, this is how long in ms to delay after a
# hotplug event is signalled to re-enumerate the USB bus.
# If polling is enabled, this is how often to poll.
#com.ibm.jusb.os.linux.LinuxUsbServices.topologyUpdateDelay = 1000

# Whether to trace data or not.  Enabling this will display ALL data (a lot!)
# and certainly will slow everything down.
#com.ibm.jusb.os.linux.LinuxUsbServices.trace_data = false

